/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProcessesRouteImport } from './routes/processes'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProcessesProcessNameRouteImport } from './routes/processes.$processName'

const ProcessesRoute = ProcessesRouteImport.update({
  id: '/processes',
  path: '/processes',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProcessesProcessNameRoute = ProcessesProcessNameRouteImport.update({
  id: '/$processName',
  path: '/$processName',
  getParentRoute: () => ProcessesRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/processes': typeof ProcessesRouteWithChildren
  '/processes/$processName': typeof ProcessesProcessNameRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/processes': typeof ProcessesRouteWithChildren
  '/processes/$processName': typeof ProcessesProcessNameRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/processes': typeof ProcessesRouteWithChildren
  '/processes/$processName': typeof ProcessesProcessNameRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/processes' | '/processes/$processName'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/processes' | '/processes/$processName'
  id: '__root__' | '/' | '/processes' | '/processes/$processName'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProcessesRoute: typeof ProcessesRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/processes': {
      id: '/processes'
      path: '/processes'
      fullPath: '/processes'
      preLoaderRoute: typeof ProcessesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/processes/$processName': {
      id: '/processes/$processName'
      path: '/$processName'
      fullPath: '/processes/$processName'
      preLoaderRoute: typeof ProcessesProcessNameRouteImport
      parentRoute: typeof ProcessesRoute
    }
  }
}

interface ProcessesRouteChildren {
  ProcessesProcessNameRoute: typeof ProcessesProcessNameRoute
}

const ProcessesRouteChildren: ProcessesRouteChildren = {
  ProcessesProcessNameRoute: ProcessesProcessNameRoute,
}

const ProcessesRouteWithChildren = ProcessesRoute._addFileChildren(
  ProcessesRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProcessesRoute: ProcessesRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
